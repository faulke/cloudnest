version: '3.8'

services:
  api:
    container_name: cloudnest-api
    image: cloudnest-api:1.0.0
    build:
      context: .
      target: development
    command: npm run start:debug api
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${API_PORT}:${API_PORT}
    env_file:
      - .env
    depends_on:
      - db
  transactions:
    container_name: cloudnest-transactions
    image: cloudnest-transactions:1.0.0
    build:
      context: .
      target: development
    command: npm run start:debug transactions
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${TRANSACTIONS_PORT}:${TRANSACTIONS_PORT}
      - 3000:3000/tcp
    env_file:
      - .env
  db:
    container_name: cloudnest-db
    image: postgres:14.0-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  raven:
    container_name: cloudnest-ravendb
    image: ravendb/ravendb:latest-lts
    environment:
      - RAVEN_Setup_Mode=None
      - RAVEN_Security_UnsecuredAccessAllowed=PrivateNetwork
      - RAVEN_ARGS=--log-to-console
      # - RAVEN_ServerUrl=http://0.0.0.0:8080
      # - RAVEN_ServerUrl_Tcp=tcp://0.0.0.0:38888
    ports:
      - ${RAVEN_UI_PORT}:${RAVEN_PORT}
      - ${RAVEN_TCP_PORT}:38888/tcp
    expose:
      - ${RAVEN_UI_PORT}
    volumes:
      - ./data/raven:/opt/RavenDB/Server/RavenData
